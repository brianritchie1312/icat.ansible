---

- name: "{{ play_name }}Starting {{ container_domain }} before tasks"
  include: "include_startdomain.yml"

#---

#---Downloading ICAT Lucene---

- name: "{{ play_name }}Downloading Lucene"
  include: "include_download.yml"
  vars:
    - download_zip: "{{ lucene_zip }}"
    - download_src: "{{ lucene_src }}"
    - download_path: "{{ lucene_path }}"
    - download_dest: "{{ user_home }}"

#---

#---Setup file---

- name: "{{ play_name }}Checking if {{ lucene_setup }} exists"
  stat:
    path: "{{ lucene_path }}/{{ lucene_setup }}"
  register: il_setup

- name: "{{ play_name }}Copying {{ lucene_setup }}.example"
  copy:
    src: "{{ lucene_path }}/{{ lucene_setup }}.example"
    dest: "{{ lucene_path }}/{{ lucene_setup }}"
    remote_src: yes
  when:
    - il_setup.stat.exists == false

- name: "{{ play_name }}Configuring {{ lucene_setup }}"
  lineinfile:
    path: "{{ lucene_path }}/{{ lucene_setup }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ container_cnf_list }}"

#---

#---Lucene Directory---

- name: "{{ play_name }}Creating Lucene directory"
  file: 
    path: "{{ lucene_dir }}"
    state: directory

#---Lucene Properties---

- name: "{{ play_name }}Copying {{ lucene_prop }}.example"
  copy:
    src: "{{ lucene_path }}/{{ lucene_prop }}.example"
    dest: "{{ lucene_path }}/{{ lucene_prop }}"
    remote_src: yes
    force: no

- name: "{{ play_name }}Configuring {{ lucene_prop }}"
  lineinfile:
    dest: "{{ lucene_path }}/{{ lucene_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^directory', line: 'directory = {{ lucene_dir }}' }
    - { regexp: '^ip',        line: 'ip = 127.0.0.01/0' }

#---

#---Running Setup---

- name: "{{ play_name }}Installing Lucene"
  shell:
    cmd: ./setup install
    chdir: "{{ lucene_path }}"
  tags:
    - install

#---

#--Quick Test--

- name: "{{ play_name }}Checking Installed Lucene Version"
  command: "curl -k {{ icat_url }}/icat.lucene/version"
  register: curl_lucene
  tags:
    - check

- name: "{{ play_name }}Failing If Lucene Output Incorrect"
  fail:
    msg:
      - 'Lucene has a problem.'
      - 'Expected stdout: "{"version":"{{ icat_lucene_version }}"}"'
      - 'Actual stdout:   "{{ curl_lucene.stdout }}"'
      - 'NOTE: Only version number is check all other text and syntax are ignored.'
  when:
    - icat_lucene_version not in curl_lucene.stdout
  tags:
    - check

#---


---

- name: "{{ play_name }}Starting {{ container_domain }} before tasks"
  include: "include_startdomain.yml"

#---

- name: "{{ play_name }}Changing URL for versions 1.7.0 and later"
  set_fact:
    sub_domain: repo
    url_mvn: 
  when:
    - ids_server_version | version_compare('1.7.0', '>=') == true

- name: "{{ play_name }}Changing URL for versions older than 1.7.0"
  set_fact:
    sub_domain: www
    url_mvn: mvn/
  when:
    - ids_server_version | version_compare('1.7.0', '<') == true

- name: "{{ play_name }}Changing Filenames for versions older than 1.8.0"
  set_fact:
    ids_setup: ids-setup.properties
    ids_prop: ids.properties
  when:
    - ids_server_version | version_compare('1.8.0', '<') == true


#---Downloading IDS---

- name: "{{ play_name }}Downloading IDS"
  include: "include_download.yml"
  vars:
    - download_zip: "{{ ids_zip }}"
    - download_src: "{{ ids_src }}"
    - download_path: "{{ ids_path }}"
    - download_dest: "{{ user_home }}" 

#---

#---Setup Properties file---

- name: "{{ play_name }}Checking if {{ ids_setup }} exists"
  stat:
    path: "{{ ids_path }}/{{ ids_setup }}"
  register: ip_setup

- name: "{{ play_name }}Copying {{ ids_setup }}.example"
  copy:
    src: "{{ ids_path }}/{{ ids_setup }}.example"
    dest: "{{ ids_path }}/{{ ids_setup }}"
    remote_src: yes
  when:
    - ip_setup.stat.exists == false

- name: "{{ play_name }}Configuring {{ ids_setup }}"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_setup }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items: "{{ container_cnf_list }}"

- name: "{{ play_name }}Configuring {{ ids_setup }} - Configuring Libraries"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_setup }}"
    regexp: "libraries"
    line: libraries=ids.storage_file*.jar
    state: present
  when:
    - ids_storage == true

#---

#---Creating Cache---

- name: "{{ play_name }}Creating Cache"
  file:
    path: "{{ user_home }}/{{ icat_name }}/main/ids/cache/"
    state: directory

#---

#---Properties file---

- name: "{{ play_name }}Creating {{ ids_prop }}"
  copy:
    src: "{{ ids_path }}/{{ ids_prop }}.example"
    dest: "{{ ids_path }}/{{ ids_prop }}"
    remote_src: yes
    force: no
    
- name: "{{ play_name }}Configuring {{ ids_prop }}"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^icat\\.url",      line: "icat.url = {{ icat_url }}" }
    - { regexp: "^cache\\.dir",     line: "cache.dir = {{ user_home }}/{{ icat_name }}/main/ids/cache/" }
    - { regexp: "^rootUserNames",  line: "rootUserNames = {{ icat_admin_mech }}/{{ icat_admin_user }}" }
    - { regexp: "^reader",         line: "reader = {{ icat_admin_mech }} username {{ icat_admin_user }} password {{ icat_admin_pass }}" }
    - { regexp: "^storageUnit",    line: "storageUnit = datafile" }
    - { regexp: "^\\.lastIdFile",   line: "filesCheck.lastIdFile = {{ user_home }}/{{ icat_name }}/main/ids/lastIdFile" }
    - { regexp: "^\\.errorLog",     line: "filesCheck.errorLog = {{ user_home }}/{{ icat_name }}/main/ids/errorLog" }

- name: "{{ play_name }}Adding storage directories for storage plugin versions 1.4.0 or newer"
  lineinfile:
    path: "{{ ids_path }}/{{ ids_prop }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^plugin\\.main\\.dir",    line: "plugin.main.dir = {{ dir_main }}" }
    - { regexp: "plugin\\.archive\\.dir", line: "plugin.archive.dir = {{ dir_archive }}" }
  when:
    - ids_storage_version | version_compare('1.4.0','>=') == true

- name: "{{ play_name }}Disabling archive"
  replace:
    path: "{{ ids_path }}/{{ ids_prop }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.rep }}"
  with_items:
    - { regexp: "^plugin\\.archive",       rep: "!plugin.archive" }
    - { regexp: "^writeDelaySeconds",     rep: "!writeDelaySeconds" }
    - { regexp: "^startArchivingLevel",   rep: "!startArchivingLevel" }
    - { regexp: "^stopArchivingLevel",    rep: "!stopArchivingLevel" }
    - { regexp: "^storageUnit",           rep: "!storageUnit" }
    - { regexp: "^tidyBlockSize",         rep: "!tidyBlockSize" }
  when:
    - two_level == false

#---

#---Running Setup---

- name: "{{ play_name }}Installing IDS"
  environment:
    PATH: "{{ container_path }}/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: ./setup install
    chdir: "{{ ids_path }}"
  tags:
    - install
#---

#--Quick Test--

- name: "{{ play_name }}Checking Installed IDS Version"
  command: "curl {{ icat_url }}/ids/version"
  register: curl_ids
  tags:
    - check

- name: "{{ play_name }}Failing If IDS Output Incorrect"
  fail:
    msg:
      - 'IDS has a problem.'
      - 'Expected stdout: "{"version":"{{ ids_server_version }}"}"'
      - 'Actual stdout:   "{{ curl_ids.stdout }}"'
      - 'NOTE: Only version number is check all other text and syntax are ignored.'
  when:
    - ids_server_version not in curl_ids.stdout
  tags:
    - check

#---

